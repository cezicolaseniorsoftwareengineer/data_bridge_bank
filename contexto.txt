Resumo do Contexto do Projeto

Estamos desenvolvendo uma aplicação financeira segura e escalável para um banco americano de médio porte. O sistema será baseado em microserviços, com foco em contas, transações e cartões, e seguirá as regulamentações dos EUA (SOX, PCI-DSS).

Objetivos da aplicação:

    Abrir e gerenciar contas

    Realizar transferências, consultar extratos e fazer pagamentos

    Controlar cartões de crédito e débito

    Enviar notificações e autenticar com dois fatores

    Integrar com serviços externos (ex: FedNow, Plaid)

Participantes principais:

    Product Owner, Compliance, Engenharia, DevOps e Segurança

Arquitetura:

    Hexagonal, com separação clara entre domínio e infraestrutura

    Baseada em TDD, DDD e princípios SOLID

Camadas:

    Apresentação (API REST/GraphQL)

    Aplicação (casos de uso)

    Domínio (regras de negócio)

    Infraestrutura (persistência, integrações, notificações)

Tecnologias:

    Java ou Kotlin com Spring Boot

    PostgreSQL, Redis, Kafka

    Testes com JUnit, Mockito, Testcontainers

    CI/CD com GitHub Actions, Docker, Terraform na AWS

    Monitoramento com Prometheus, Grafana e ELK

Testes com TDD:

    Testes unitários, de integração e ponta a ponta

Contextos principais:

    Accounts, Transactions, Cards, Users, Notifications

Regras de negócio:

    Impedir transferências sem saldo

    Verificar identidade na criação de contas

    Bloquear cartão após três erros de senha

    Alertar operações suspeitas

Segurança:

    OAuth 2.0, OpenID Connect, criptografia, auditoria e varredura contínua

Primeiras entregas:

    MVP com contas, transações e usuários

    Pipeline de CI/CD

    Monitoramento básico
